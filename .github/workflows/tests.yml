name: tests

on:
  push:
    branches:
      - main
    paths:
      - '**.py'
      - '.github/workflows/tests.yml'
      - 'pyproject.toml'
      - 'tests/**'
  pull_request:

jobs:
  check:
    name: ${{ matrix.toxenv }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        toxenv: [ check-style, check-build ]
        python: [ '3.11' ]
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
          cache-dependency-path: 'pyproject.toml'
      - run: pip install "tox>=4.0"
      - run: tox -e ${{ matrix.toxenv }}
  test:
    name: ${{ matrix.toxenv }} (Python ${{ matrix.python }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        toxenv: [ test-xdist, test-spatial-xdist ]
        python: [ '3.8', '3.9', '3.10', '3.11' ]
        os: [ ubuntu-latest, macos-latest ]
        include:
          - toxenv: test-cov-xdist
            os: ubuntu-latest
            python: '3.11'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
          cache-dependency-path: 'pyproject.toml'
      - run: pip install "tox>=4.0"
      - run: tox -e ${{ matrix.toxenv }}
      - if: ${{ contains(matrix.toxenv,'-cov') }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unit
          fail_ci_if_error: true
